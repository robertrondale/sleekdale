@import "~flickity/dist/flickity.css";

$icon-left: '<' !default;
$icon-right: '>' !default;

// Converts slideshow bullets into "1 / 4"
@mixin slideshow-numbered-bullets {
	counter-reset: slideshow-bullets;
	display: grid;
	grid-template-columns: 1fr 1fr;
	width: max-content;

	.dot {
		all: unset;

		counter-increment: slideshow-bullets;
		grid-row: 1;
		grid-column: 1;
		opacity: 0;
		transition: opacity 0.25s var(--easing);

		&.is-selected {
			opacity: 1;
		}

		&::before {
			content: counter(slideshow-bullets);
		}
	}

	&::after {
		grid-row: 1;
		grid-column: 2;
		content: "/ " counter(slideshow-bullets);
	}
}

@if (map-get($components, "slideshow")) {
	//////////////
	// Our styling
	[data-slideshow] {
		--slideshow-slide-width: calc(100% / var(--slideshow-per-page, 1) - var(--slideshow-gap, 3rem) * (var(--slideshow-per-page, 1) - 1) / var(--slideshow-per-page, 1));

		// Display as grid until loaded
		&:not(.flickity-enabled) {
			@include grid;

			--grid-gap: var(--slideshow-gap);
			--grid-cols: var(--slideshow-per-page);
		}

		// If using adaptiveHeight: true
		.flickity-viewport {
			transition: height 0.25s var(--easing);
		}

		// Slide width
		.flickity-slider > * {
			width: var(--slideshow-slide-width);
			margin-right: var(--slideshow-gap, 3rem);
		}

		// Prev / next buttons
		@if (map-get($components, "slideshow-buttons")) {
			.flickity-prev-next-button {
				// Hide in low res as they won't fit
				@media (--laptop-max) {
					display: none;
				}

				all: unset; // Remove button styling as well as flickity's styling
				cursor: pointer;

				// Position centered on the sides
				position: absolute;
				left: 0;
				top: 50%;
				transform: translate(calc((100% + var(--slideshow-buttons-margin, var(--spacing-large, 3rem))) * -1), -50%);

				&.next {
					left: auto;
					right: 0;
					transform: translate(calc(100% + var(--slideshow-buttons-margin, var(--spacing-large, 3rem))), -50%);
				}

				// Replace SVGs with icons
				svg {
					display: none;
				}

				&::before {
					@include icon($icon-left);

					margin: 0;
					font-size: var(--slideshow-arrow-size, 2rem);
					line-height: 1;
				}

				&.next::before {
					content: $icon-right;
				}
			}
		}

		// Bullets
		@if (map-get($components, "slideshow-bullets")) {
			.flickity-page-dots {
				all: unset;

				display: block;
				text-align: center;
				margin-top: var(--slideshow-bullet-margin, var(--spacing-large, 3rem));

				font-size: 0; // NOTE: Remove inline-block line-height

				.dot {
					background: var(--slideshow-bullet-color, #999);

					display: inline-block;
					width: var(--slideshow-bullet-size, 0.75rem);
					height: var(--slideshow-bullet-size, 0.75rem);

					margin: 0 var(--slideshow-bullet-spacing, var(--spacing-small, 0.5rem));

					opacity: 1;
					border-radius: 50%;
					transition: background-color 0.25s var(--easing);

					&:focus {
						box-shadow: none;
					}

					&.is-selected {
						background: var(--slideshow-bullet-color-active, var(--color-primary, #f90));
					}
				}
			}
		}
	}
}
