// Separated
@mixin list-separated ($separator: var(--list-separated-separator, "|")) {
	margin-left: 0;
	padding-left: 0;
	list-style: none;

	> * {
		display: inline-block;

		&:not(:last-child)::after {
			margin: 0 var(--list-separated-spacing, 0.25em);
			content: #{$separator};
		}
	}
}

// Key/value list
@mixin list-key-val ($suffix: var(--list-key-val-suffix, ":")) {
	display: grid;
	grid-template-columns: max-content auto;
	grid-column-gap: var(--list-key-val-spacing, 0.25rem);

	> * {
		grid-column-start: 2;
		margin: 0;
	}

	> :nth-child(odd) {
		grid-column-start: 1;

		&::after {
			content: #{$suffix};
		}
	}
}

// List with icon
$icon-check: '?' !default;

@mixin list-icon ($icon: var(--list-icon, "#{$icon-check}")) {
	margin-left: 0;
	padding-left: 0;
	list-style: none;

	> * {
		position: relative;
		margin-bottom: var(--list-icon-spacing, 0);
		padding-left: calc(var(--list-icon-size, var(--body-font-size, 1rem)) + var(--spacing-medium));

		&:last-child {
			margin-bottom: 0;
		}

		&::before {
			@include icon($icon);

			margin: 0;
			position: absolute;
			left: 0;
			top: 0;

			font-size: var(--list-icon-size, inherit);
			line-height: inherit;
			// line-height: calc(var(--body-font-size) * var(--body-line-height));
		}
	}
}
